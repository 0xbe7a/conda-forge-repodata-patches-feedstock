# yaml-language-server: $schema=../patch_yaml_model.json
# from this bit of code
# # cuda-cccl and cuda-cccl-impl (released with CUDA 12) ship the same
# # files as existing thrust/cub packages. These should conflict.
# # Eventually users of thrust/cub should migrate to cuda-cccl[-impl]
# if record_name in {"thrust", "cub"}:
#     new_constrains = record.get('constrains', [])
#     new_constrains.append("cuda-cccl <0.0.0a0")
#     new_constrains.append("cuda-cccl-impl <0.0.0a0")
#     new_constrains.append(f"cuda-cccl_{subdir} <0.0.0a0")
#     record['constrains'] = new_constrains
if:
  name_in: ["thrust", "cub"]
then:
  - add_constrains: ["cuda-cccl <0.0.0a0", "cuda-cccl-impl <0.0.0a0"]
---
if:
  name_in: ["thrust", "cub"]
  subdir: linux-64
then:
  - add_constrains: ["cuda-cccl_linux-64 <0.0.0a0"]
---
if:
  name_in: ["thrust", "cub"]
  subdir: linux-aarch64
then:
  - add_constrains: ["cuda-cccl_linux-aarch64 <0.0.0a0"]
---
if:
  name_in: ["thrust", "cub"]
  subdir: linux-ppc64le
then:
  - add_constrains: ["cuda-cccl_linux-ppc64le <0.0.0a0"]
---
if:
  name_in: ["thrust", "cub"]
  subdir: osx-64
then:
  - add_constrains: ["cuda-cccl_osx-64 <0.0.0a0"]
---
if:
  name_in: ["thrust", "cub"]
  subdir: osx-arm64
then:
  - add_constrains: ["cuda-cccl_osx-arm64 <0.0.0a0"]
---
if:
  name_in: ["thrust", "cub"]
  subdir: win-64
then:
  - add_constrains: ["cuda-cccl_win-64 <0.0.0a0"]
---
# The cccl package replaces cuda-cccl-impl. This patch prevents simultaneous installation.
if:
  name: cuda-cccl-impl
  version: 2.0.1
  build_number: 0
then:
  # Prevent clobbering with cccl
  - add_constrains: cccl <0.0.0a0
